openapi: 3.0.0
info:
  version: 1.0.0
  title: user
  description: 用户 API
servers:
  - url: 'http://localhost:8080/api/user'
paths:
  /login:
    post:
      summary: '用户登录， 获取token'
      operationId: post-login-email
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: 'OK - login successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginSuccess' 
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'      
  /register:
    post:
      summary: '用户注册'
      operationId: post-register-email
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                nickname:
                  type: string
      responses:
        '200':
          description: 'OK - register successfully'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
  /user/{userId}:
    get:
      summary: '获取当前登录用户信息'
      operationId: get-user-id
      tags:
        - user
      parameters:
        - name: userId
          in: path
          description: 当前用户的 ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    $ref: '#/components/schemas/user'
                  is_admin:
                    type: boolean
                  balance:
                    type: integer
                    format: int32
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'   
    put:
      summary: '修改用户信息'
      operationId: put-user-userId
      tags:
        - user
      parameters:
        - name: userId
          in: path
          description: 当前用户的 ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:            
                  user:
                    type: object
                    $ref: '#/components/schemas/user' 
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '404':
          description: 'Not Found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user:
    get:
      summary: '获取所有用户信息'
      operationId: get-user
      tags:
        - user
      parameters:
        - name: userId
          in: path
          description: 当前用户的 ID
          required: true
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: 查询的页码
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    $ref: '#/components/schemas/user'
                  is_admin:
                    type: boolean
                  balance:
                    type: integer
                    format: int32
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'   
  /user/count:
    get:
      summary: '获取所有用户数量'
      operationId: get-user-count
      tags:
        - user
      parameters:
        - name: userId
          in: path
          description: 当前用户的 ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    format: int32
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'   
  /user/password/{userId}:
    put:
      summary: '修改密码'
      operationId: put-user-password-userId
      tags:
        - user
      parameters:
        - name: userId
          in: path
          description: 当前用户的 ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: 'OK'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '404':
          description: 'Not Found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /delivery:
    get:
      summary: '获取用户收货信息'
      operationId: get-user-delivery-userid
      tags:
        - delivery
      parameters:
        - name: userId
          in: query
          description: 当前用户的 ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/delivery'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'   
    post:
      summary: '新建收货信息'
      operationId: post-delivery-userId
      tags:
        - delivery
      parameters:
        - name: userId
          in: query
          description: 当前用户的 ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deliveryInfo'
      responses:
        '201':
          description: 'Created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delivery' 
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
  /delivery/{deliveryId}:
    put:
      summary: '修改用户收货信息'
      operationId: put-delivery-deliveryId
      tags:
        - delivery
      parameters:
        - name: userId
          in: query
          description: 当前用户的 ID
          required: true
          schema:
            type: integer
            format: int32
        - name: deliveryId
          in: path
          description: 用户收货信息的 ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deliveryInfo'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delivery' 
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '404':
          description: 'Not Found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: '删除某一个收货信息'
      operationId: delete-delivery-deliveryId
      tags:
        - delivery
      parameters:
        - name: userId
          in: query
          description: 当前用户的 ID
          required: true
          schema:
            type: integer
            format: int32
        - name: deliveryId
          in: path
          description: 用户收货信息的 ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delivery' 
        '400':
          description: Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    badRequest:
      title: Bad Request
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
    notFound:
      title: Not Found
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
    Error:
      type: object
      required:
        - message
      properties:
        error:
          type: object
          properties:
            message:
              type: string
    loginSuccess:
      type: object
      required:
        - token
        - user
      properties:
        token:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
              format: int32
            email:
              type: string
    user:
      type: object
      required:
        - email
        - nickname
        - icon
      properties:
        email:
          type: string
        nickname:
          type: string
        icon:
          type: string
    deliveryInfo:
      type: object
      required:
        - name
        - phone
        - address
      properties:
        name:
          type: string
        phone:
          type: string
        address:
          type: string
    delivery:
      type: object
      required:
        - deliveryId
        - deliveryInfo
      properties:
        deliveryId:
          type: integer
          format: int32
        deliveryInfo:
          $ref: '#/components/schemas/deliveryInfo'